# On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the master branch, `terraform apply` will be executed.
#

name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout this repository to the GitHub Actions runner
    - name: Checkout local repo
      uses: actions/checkout@v2

    # Checkout kubespray repository for later cluster bootstrapping
    - name: Checkout kubespray
      uses: actions/checkout@v2
      with:
        repository: mehlj/kubespray
        path: kubespray

    # Checkout ansible repository for later application deployment
    - name: Checkout ansible repo
      uses: actions/checkout@v2
      with:
        repository: mehlj/mehlj-ansible
        path: ansible

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Setup AWS credentials for our account
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Add ssh key for future ansible communication
    - name: Add SSH key
      run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions

    # Update repositories
    - name: Update repos
      run: apt update -y

    # Install nodejs
    - name: Install node
      run: apt install nodejs -y

    # Install dependencies for kubespray for later kubernetes cluster provisioning
    - name: Install kubespray libraries
      run: apt install libffi-dev -y

    - name: Install kubespray dependencies
      run: pip3 install -r kubespray/requirements.txt

    - name: Configure ansible
      run: grep -qxF 'ssh_args = -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no' /etc/ansible/ansible.cfg || sed -i '/ssh_args/a ssh\_args = \-o UserKnownHostsFile\=\/dev\/null \-o StrictHostKeyChecking=no' /etc/ansible/ansible.cfg
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
